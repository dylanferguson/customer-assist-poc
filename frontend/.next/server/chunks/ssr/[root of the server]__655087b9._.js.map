{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/dylan/dev/customer-assist-poc/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file:///Users/dylan/dev/customer-assist-poc/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Label({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  return (\n    <LabelPrimitive.Root\n      data-slot=\"label\"\n      className={cn(\n        \"flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,MAAM,EACb,SAAS,EACT,GAAG,OAC8C;IACjD,qBACE,8OAAC,iKAAA,CAAA,OAAmB;QAClB,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,uNACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 59, "column": 0}, "map": {"version":3,"sources":["file:///Users/dylan/dev/customer-assist-poc/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-[color,box-shadow] disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40\",\n        outline:\n          \"border border-input bg-background shadow-xs hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,8cACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 116, "column": 0}, "map": {"version":3,"sources":["file:///Users/dylan/dev/customer-assist-poc/components/chat/WelcomeScreen.tsx"],"sourcesContent":["import { MessageCircleMore } from \"lucide-react\"\nimport { Button } from \"@/components/ui/button\"\n\ntype WelcomeScreenProps = {\n    onStartConversation: () => void\n}\n\nexport const WelcomeScreen = ({ onStartConversation }: WelcomeScreenProps) => {\n    return (\n        <div className=\"flex flex-col items-center space-y-4 p-6 max-w-md mx-auto\">\n            <MessageCircleMore className=\"size-16 text-primary\" />\n            <h1 className=\"text-2xl font-bold\">Message us</h1>\n            <ul className=\"space-y-2 w-full\">\n                <li className=\"flex gap-2\">\n                    <div className=\"h-1.5 w-1.5 rounded-full bg-primary flex-shrink-0 mt-2\"></div>\n                    <span className=\"flex-1\">24/7 Support</span>\n                </li>\n                <li className=\"flex gap-2\">\n                    <div className=\"h-1.5 w-1.5 rounded-full bg-primary flex-shrink-0 mt-2\"></div>\n                    <span className=\"flex-1\">Your messages are safe and secure</span>\n                </li>\n                <li className=\"flex gap-2\">\n                    <div className=\"h-1.5 w-1.5 rounded-full bg-primary flex-shrink-0 mt-2\"></div>\n                    <span className=\"flex-1\">Check and reply to messages when it suits you</span>\n                </li>\n            </ul>\n            <Button className=\"w-full mt-4 cursor-pointer\" onClick={onStartConversation}>Start Conversation</Button>\n        </div>\n    )\n}"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAMO,MAAM,gBAAgB,CAAC,EAAE,mBAAmB,EAAsB;IACrE,qBACI,8OAAC;QAAI,WAAU;;0BACX,8OAAC,oOAAA,CAAA,oBAAiB;gBAAC,WAAU;;;;;;0BAC7B,8OAAC;gBAAG,WAAU;0BAAqB;;;;;;0BACnC,8OAAC;gBAAG,WAAU;;kCACV,8OAAC;wBAAG,WAAU;;0CACV,8OAAC;gCAAI,WAAU;;;;;;0CACf,8OAAC;gCAAK,WAAU;0CAAS;;;;;;;;;;;;kCAE7B,8OAAC;wBAAG,WAAU;;0CACV,8OAAC;gCAAI,WAAU;;;;;;0CACf,8OAAC;gCAAK,WAAU;0CAAS;;;;;;;;;;;;kCAE7B,8OAAC;wBAAG,WAAU;;0CACV,8OAAC;gCAAI,WAAU;;;;;;0CACf,8OAAC;gCAAK,WAAU;0CAAS;;;;;;;;;;;;;;;;;;0BAGjC,8OAAC,2HAAA,CAAA,SAAM;gBAAC,WAAU;gBAA6B,SAAS;0BAAqB;;;;;;;;;;;;AAGzF","debugId":null}},
    {"offset": {"line": 247, "column": 0}, "map": {"version":3,"sources":["file:///Users/dylan/dev/customer-assist-poc/components/ui/spinner.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst spinnerVariants = cva(\n  \"inline-block animate-spin rounded-full border-current border-solid border-r-transparent align-[-0.125em] motion-reduce:animate-[spin_1.5s_linear_infinite]\",\n  {\n    variants: {\n      variant: {\n        default: \"text-primary\",\n        secondary: \"text-secondary\",\n        destructive: \"text-destructive\",\n        muted: \"text-muted-foreground\",\n      },\n      size: {\n        default: \"h-5 w-5 border-2\",\n        sm: \"h-4 w-4 border-2\",\n        lg: \"h-6 w-6 border-2\",\n        xl: \"h-8 w-8 border-3\",\n        \"2xl\": \"h-12 w-12 border-4\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  },\n)\n\nexport interface SpinnerProps extends React.HTMLAttributes<HTMLSpanElement>, VariantProps<typeof spinnerVariants> {\n  asChild?: boolean\n}\n\nconst Spinner = React.forwardRef<HTMLSpanElement, SpinnerProps>(({ className, variant, size, ...props }, ref) => {\n  return (\n    <span\n      className={cn(spinnerVariants({ variant, size, className }))}\n      ref={ref}\n      role=\"status\"\n      aria-label=\"Loading\"\n      {...props}\n    />\n  )\n})\nSpinner.displayName = \"Spinner\"\n\nexport { Spinner, spinnerVariants }\n\n"],"names":[],"mappings":";;;;;AAAA;AACA;AAEA;;;;;AAEA,MAAM,kBAAkB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACxB,8JACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,WAAW;YACX,aAAa;YACb,OAAO;QACT;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,OAAO;QACT;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAOF,MAAM,wBAAU,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAiC,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IACvG,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,gBAAgB;YAAE;YAAS;YAAM;QAAU;QACzD,KAAK;QACL,MAAK;QACL,cAAW;QACV,GAAG,KAAK;;;;;;AAGf;AACA,QAAQ,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 329, "column": 0}, "map": {"version":3,"sources":["file:///Users/dylan/dev/customer-assist-poc/components/ui/link-card.tsx"],"sourcesContent":["import { cn } from \"@/lib/utils\"\nimport Link from \"next/link\"\nimport { ReactNode } from \"react\"\n\ninterface LinkCardProps extends React.HTMLAttributes<HTMLAnchorElement> {\n    href: string\n    title: string\n    subtitle: string\n    icon?: ReactNode\n}\n\nconst LinkCard = ({ \n    href, \n    title, \n    subtitle, \n    icon, \n    className, \n    ...props \n}: LinkCardProps) => {\n    return (\n        <Link\n            href={href}\n            className={cn(\n                \"flex items-start gap-4 p-4 rounded-lg border bg-card text-card-foreground hover:bg-accent transition-colors\",\n                className\n            )}\n            {...props}\n        >\n            {icon && (\n                <div className=\"flex-shrink-0 mt-0.5\">\n                    {icon}\n                </div>\n            )}\n            <div className=\"flex flex-col min-w-0\">\n                <p className=\"text-sm font-medium text-foreground\">{title}</p>\n                <p className=\"text-sm text-muted-foreground\">{subtitle}</p>\n            </div>\n        </Link>\n    )\n}\n\nexport { LinkCard }\nexport type { LinkCardProps } "],"names":[],"mappings":";;;;AAAA;AACA;;;;AAUA,MAAM,WAAW,CAAC,EACd,IAAI,EACJ,KAAK,EACL,QAAQ,EACR,IAAI,EACJ,SAAS,EACT,GAAG,OACS;IACZ,qBACI,8OAAC,4JAAA,CAAA,UAAI;QACD,MAAM;QACN,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACR,+GACA;QAEH,GAAG,KAAK;;YAER,sBACG,8OAAC;gBAAI,WAAU;0BACV;;;;;;0BAGT,8OAAC;gBAAI,WAAU;;kCACX,8OAAC;wBAAE,WAAU;kCAAuC;;;;;;kCACpD,8OAAC;wBAAE,WAAU;kCAAiC;;;;;;;;;;;;;;;;;;AAI9D","debugId":null}},
    {"offset": {"line": 391, "column": 0}, "map": {"version":3,"sources":["file:///Users/dylan/dev/customer-assist-poc/components/chat/ConversationListItem.tsx"],"sourcesContent":["import { Bot, UserRound } from \"lucide-react\"\nimport { format } from \"date-fns\"\nimport { Conversation } from \"./Inbox\"\n\ninterface ConversationListItemProps {\n    conversation: Conversation\n}\n\nexport const ConversationListItem: React.FC<ConversationListItemProps> = ({ conversation }) => {\n    return (\n        <>\n            <div className=\"relative px-4 py-3 cursor-pointer hover:bg-gray-50\">\n                <div className=\"flex items-center gap-3\">\n                    {/* Avatar with unread indicator */}\n                    <div className=\"relative\">\n                        {conversation.unread && (\n                            <div className=\"absolute w-2.5 h-2.5 bg-red-500 rounded-full left-0 top-0\" />\n                        )}\n                        <div className=\"flex items-center justify-center w-10 h-10 bg-gray-100 rounded-full\">\n                            {conversation.type === 'bot' ? (\n                                <Bot className=\"w-5 h-5 text-gray-600\" />\n                            ) : (\n                                <UserRound className=\"w-5 h-5 text-gray-600\" />\n                            )}\n                        </div>\n                    </div>\n\n                    {/* Content */}\n                    <div className=\"flex-1 min-w-0\">\n                        <span className=\"block mb-1 text-xs text-gray-500\">\n                            {format(conversation.timestamp, 'EEE h:mma')}\n                        </span>\n                        <div className=\"flex items-start justify-between\">\n                            <h3 className={`text-base ${conversation.unread ? 'font-bold' : 'font-medium'}`}>\n                                {conversation.subject}\n                            </h3>\n                        </div>\n                        <p className={`text-sm truncate ${conversation.unread ? 'text-gray-800' : 'text-gray-500'}`}>\n                            {conversation.lastMessage}\n                        </p>\n                    </div>\n                </div>\n            </div>\n            <div className=\"h-px mx-4 bg-gray-200\" />\n        </>\n    )\n} "],"names":[],"mappings":";;;;AAAA;AAAA;AACA;;;;AAOO,MAAM,uBAA4D,CAAC,EAAE,YAAY,EAAE;IACtF,qBACI;;0BACI,8OAAC;gBAAI,WAAU;0BACX,cAAA,8OAAC;oBAAI,WAAU;;sCAEX,8OAAC;4BAAI,WAAU;;gCACV,aAAa,MAAM,kBAChB,8OAAC;oCAAI,WAAU;;;;;;8CAEnB,8OAAC;oCAAI,WAAU;8CACV,aAAa,IAAI,KAAK,sBACnB,8OAAC,gMAAA,CAAA,MAAG;wCAAC,WAAU;;;;;6DAEf,8OAAC,gNAAA,CAAA,YAAS;wCAAC,WAAU;;;;;;;;;;;;;;;;;sCAMjC,8OAAC;4BAAI,WAAU;;8CACX,8OAAC;oCAAK,WAAU;8CACX,CAAA,GAAA,qJAAA,CAAA,SAAM,AAAD,EAAE,aAAa,SAAS,EAAE;;;;;;8CAEpC,8OAAC;oCAAI,WAAU;8CACX,cAAA,8OAAC;wCAAG,WAAW,CAAC,UAAU,EAAE,aAAa,MAAM,GAAG,cAAc,eAAe;kDAC1E,aAAa,OAAO;;;;;;;;;;;8CAG7B,8OAAC;oCAAE,WAAW,CAAC,iBAAiB,EAAE,aAAa,MAAM,GAAG,kBAAkB,iBAAiB;8CACtF,aAAa,WAAW;;;;;;;;;;;;;;;;;;;;;;;0BAKzC,8OAAC;gBAAI,WAAU;;;;;;;;AAG3B","debugId":null}},
    {"offset": {"line": 512, "column": 0}, "map": {"version":3,"sources":["file:///Users/dylan/dev/customer-assist-poc/components/chat/Inbox.tsx"],"sourcesContent":["import { Spinner } from \"../ui/spinner\"\nimport { useEffect, useState } from \"react\"\nimport { SquarePen, Calendar, HelpCircle, Search } from \"lucide-react\"\nimport { LinkCard } from \"../ui/link-card\"\nimport { ConversationListItem } from \"./ConversationListItem\"\n\nexport interface Conversation {\n    id: string\n    type: 'bot' | 'agent'\n    name: string\n    subject: string\n    lastMessage: string\n    timestamp: Date\n    unread: boolean\n}\n\nconst EmptyInbox = () => {\n    return (\n        <div className=\"flex-1\">\n            <div className=\"mt-4 mb-10\">\n                <p className=\"font-medium text-gray-900\">You have no conversations.</p>\n            </div>\n\n            <div>\n                <h3 className=\"mb-3 text-lg font-medium text-gray-900\">Helpful resources</h3>\n                <div className=\"space-y-2\">\n                    <LinkCard\n                        href=\"#\"\n                        icon={<Calendar className=\"w-5 h-5\" />}\n                        title=\"Book a home loan appointment\"\n                        subtitle=\"Speak to a specialist\"\n                    />\n                    <LinkCard\n                        href=\"#\"\n                        icon={<HelpCircle className=\"w-5 h-5\" />}\n                        title=\"Frequently asked questions\"\n                        subtitle=\"Find answers to common questions\"\n                    />\n                    <LinkCard\n                        href=\"#\"\n                        icon={<Search className=\"w-5 h-5\" />}\n                        title=\"Suspicious transaction?\"\n                        subtitle=\"Here's what to do...\"\n                    />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst Inbox = () => {\n    const [isLoading, setIsLoading] = useState(true)\n    const [conversations, setConversations] = useState<Conversation[]>([])\n\n    useEffect(() => {\n        const timer = setTimeout(() => {\n            setIsLoading(false)\n            setConversations([\n                {\n                    id: '1',\n                    type: 'bot',\n                    name: 'Virtual Assistant',\n                    subject: 'General Inquiry',\n                    lastMessage: 'How can I help you today?',\n                    timestamp: new Date(),\n                    unread: true\n                },\n                {\n                    id: '2',\n                    type: 'agent',\n                    name: 'Sarah from Support',\n                    subject: 'Loan Application Review',\n                    lastMessage: \"I've reviewed your loan application...\",\n                    timestamp: new Date(Date.now() - 24 * 60 * 60 * 1000),\n                    unread: false\n                },\n                {\n                    id: '3',\n                    type: 'agent',\n                    name: 'Michael Chen',\n                    subject: 'Credit Card Application',\n                    lastMessage: 'Your application has been approved',\n                    timestamp: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000),\n                    unread: true\n                },\n                {\n                    id: '4',\n                    type: 'bot',\n                    name: 'Virtual Assistant',\n                    subject: 'Account Security Alert',\n                    lastMessage: 'We noticed a login from a new device',\n                    timestamp: new Date(Date.now() - 3 * 24 * 60 * 60 * 1000),\n                    unread: false\n                }\n            ])\n        }, 200)\n\n        return () => clearTimeout(timer)\n    }, [])\n\n    if (isLoading) {\n        return (\n            <div className=\"flex flex-col items-center justify-center flex-1\">\n                <Spinner />\n                <p className=\"mt-2 text-sm text-muted-foreground\">Loading messages...</p>\n            </div>\n        )\n    }\n\n    return (\n        <div className=\"flex flex-1 h-full\">\n            <div className=\"flex flex-col flex-1 h-full\">\n                <div>\n                    <p className=\"text-gray-700 text-sm/5\">ACME virtual assistant is here for you 24/7. Our human team will get back to you within 48 hours.</p>\n                    <h2 className=\"mt-6 text-lg font-bold\">Messages</h2>\n                </div>\n                \n                {(conversations.length === 0) ? (\n                    <EmptyInbox />\n                ) : (\n                    <div className=\"flex-1 mt-6 overflow-y-auto\">\n                        {conversations.map((conversation) => (\n                            <ConversationListItem\n                                key={conversation.id}\n                                conversation={conversation}\n                            />\n                        ))}\n                    </div>\n                )}\n\n                <button className=\"absolute p-3 transition-transform rounded-lg shadow-lg cursor-pointer bottom-4 right-4 bg-primary text-primary-foreground hover:scale-105\">\n                    <SquarePen className=\"w-6 h-6\" />\n                </button>\n            </div>\n        </div>\n    )\n}\n\nexport default Inbox"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;;AAYA,MAAM,aAAa;IACf,qBACI,8OAAC;QAAI,WAAU;;0BACX,8OAAC;gBAAI,WAAU;0BACX,cAAA,8OAAC;oBAAE,WAAU;8BAA4B;;;;;;;;;;;0BAG7C,8OAAC;;kCACG,8OAAC;wBAAG,WAAU;kCAAyC;;;;;;kCACvD,8OAAC;wBAAI,WAAU;;0CACX,8OAAC,iIAAA,CAAA,WAAQ;gCACL,MAAK;gCACL,oBAAM,8OAAC,0MAAA,CAAA,WAAQ;oCAAC,WAAU;;;;;;gCAC1B,OAAM;gCACN,UAAS;;;;;;0CAEb,8OAAC,iIAAA,CAAA,WAAQ;gCACL,MAAK;gCACL,oBAAM,8OAAC,kNAAA,CAAA,aAAU;oCAAC,WAAU;;;;;;gCAC5B,OAAM;gCACN,UAAS;;;;;;0CAEb,8OAAC,iIAAA,CAAA,WAAQ;gCACL,MAAK;gCACL,oBAAM,8OAAC,sMAAA,CAAA,SAAM;oCAAC,WAAU;;;;;;gCACxB,OAAM;gCACN,UAAS;;;;;;;;;;;;;;;;;;;;;;;;AAMjC;AAEA,MAAM,QAAQ;IACV,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAkB,EAAE;IAErE,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,MAAM,QAAQ,WAAW;YACrB,aAAa;YACb,iBAAiB;gBACb;oBACI,IAAI;oBACJ,MAAM;oBACN,MAAM;oBACN,SAAS;oBACT,aAAa;oBACb,WAAW,IAAI;oBACf,QAAQ;gBACZ;gBACA;oBACI,IAAI;oBACJ,MAAM;oBACN,MAAM;oBACN,SAAS;oBACT,aAAa;oBACb,WAAW,IAAI,KAAK,KAAK,GAAG,KAAK,KAAK,KAAK,KAAK;oBAChD,QAAQ;gBACZ;gBACA;oBACI,IAAI;oBACJ,MAAM;oBACN,MAAM;oBACN,SAAS;oBACT,aAAa;oBACb,WAAW,IAAI,KAAK,KAAK,GAAG,KAAK,IAAI,KAAK,KAAK,KAAK;oBACpD,QAAQ;gBACZ;gBACA;oBACI,IAAI;oBACJ,MAAM;oBACN,MAAM;oBACN,SAAS;oBACT,aAAa;oBACb,WAAW,IAAI,KAAK,KAAK,GAAG,KAAK,IAAI,KAAK,KAAK,KAAK;oBACpD,QAAQ;gBACZ;aACH;QACL,GAAG;QAEH,OAAO,IAAM,aAAa;IAC9B,GAAG,EAAE;IAEL,IAAI,WAAW;QACX,qBACI,8OAAC;YAAI,WAAU;;8BACX,8OAAC,4HAAA,CAAA,UAAO;;;;;8BACR,8OAAC;oBAAE,WAAU;8BAAqC;;;;;;;;;;;;IAG9D;IAEA,qBACI,8OAAC;QAAI,WAAU;kBACX,cAAA,8OAAC;YAAI,WAAU;;8BACX,8OAAC;;sCACG,8OAAC;4BAAE,WAAU;sCAA0B;;;;;;sCACvC,8OAAC;4BAAG,WAAU;sCAAyB;;;;;;;;;;;;gBAGzC,cAAc,MAAM,KAAK,kBACvB,8OAAC;;;;yCAED,8OAAC;oBAAI,WAAU;8BACV,cAAc,GAAG,CAAC,CAAC,6BAChB,8OAAC,2IAAA,CAAA,uBAAoB;4BAEjB,cAAc;2BADT,aAAa,EAAE;;;;;;;;;;8BAOpC,8OAAC;oBAAO,WAAU;8BACd,cAAA,8OAAC,gNAAA,CAAA,YAAS;wBAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;AAKzC;uCAEe","debugId":null}},
    {"offset": {"line": 780, "column": 0}, "map": {"version":3,"sources":["file:///Users/dylan/dev/customer-assist-poc/components/chat/ChatWindow.tsx"],"sourcesContent":["import { Button } from \"@/components/ui/button\"\nimport { X } from \"lucide-react\"\nimport { WelcomeScreen } from \"./WelcomeScreen\"\nimport Inbox from \"./Inbox\"\nimport { useState } from \"react\"\n\ntype ChatProps = {\n    toggleChat: () => void\n}\n\nexport const ChatWindow = ({ toggleChat }: ChatProps) => {\n    const [showInbox, setShowInbox] = useState(false)\n    \n    const handleStartConversation = () => {\n        setShowInbox(true)\n    }\n    \n    return (\n        <div className=\"relative flex flex-col overflow-hidden duration-300 bg-white rounded-lg shadow-lg w-90 h-150 animate-in slide-in-from-bottom-5\">\n            <div className=\"flex items-center justify-between p-2 bg-primary\">\n                <div className=\"w-8\"></div> {/* Spacer to balance the close button */}\n                <h3 className=\"flex-1 font-medium text-center text-primary-foreground\">ACME Messaging</h3>\n                <Button\n                    variant=\"ghost\"\n                    size=\"icon\"\n                    className=\"w-8 h-8 cursor-pointer text-primary-foreground hover:text-primary-foreground hover:bg-primary-secondary\"\n                    onClick={toggleChat}\n                    aria-label=\"Minimize chat\"\n                >\n                    <X className=\"w-4 h-4\" />\n                </Button>\n            </div>\n            <div className=\"flex flex-1 h-full p-4\">\n                {showInbox ? (\n                    <div className=\"flex flex-1 duration-300 animate-in fade-in slide-in-from-right-5\">\n                        <Inbox />\n                    </div>\n                ) : (\n                    <WelcomeScreen onStartConversation={handleStartConversation} />\n                )}\n            </div>\n        </div>\n    )\n}"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;;;;;;;AAMO,MAAM,aAAa,CAAC,EAAE,UAAU,EAAa;IAChD,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,MAAM,0BAA0B;QAC5B,aAAa;IACjB;IAEA,qBACI,8OAAC;QAAI,WAAU;;0BACX,8OAAC;gBAAI,WAAU;;kCACX,8OAAC;wBAAI,WAAU;;;;;;oBAAY;kCAC3B,8OAAC;wBAAG,WAAU;kCAAyD;;;;;;kCACvE,8OAAC,2HAAA,CAAA,SAAM;wBACH,SAAQ;wBACR,MAAK;wBACL,WAAU;wBACV,SAAS;wBACT,cAAW;kCAEX,cAAA,8OAAC,4LAAA,CAAA,IAAC;4BAAC,WAAU;;;;;;;;;;;;;;;;;0BAGrB,8OAAC;gBAAI,WAAU;0BACV,0BACG,8OAAC;oBAAI,WAAU;8BACX,cAAA,8OAAC,4HAAA,CAAA,UAAK;;;;;;;;;yCAGV,8OAAC,oIAAA,CAAA,gBAAa;oBAAC,qBAAqB;;;;;;;;;;;;;;;;;AAKxD","debugId":null}},
    {"offset": {"line": 884, "column": 0}, "map": {"version":3,"sources":["file:///Users/dylan/dev/customer-assist-poc/components/chat/FAB.tsx"],"sourcesContent":["\"use client\"\n\nimport { Button } from \"@/components/ui/button\"\nimport { MessageCircle } from \"lucide-react\"\nimport { useState } from \"react\"\nimport { ChatWindow } from \"./ChatWindow\"\n\nexport function ChatFab() {\n  const [isOpen, setIsOpen] = useState(false)\n\n  const toggleChat = () => {\n    setIsOpen(!isOpen)\n  }\n\n  return (\n    <div className=\"fixed bottom-4 right-4 z-50\">\n      {isOpen ? (\n          <ChatWindow toggleChat={toggleChat} />\n      ) : (\n        <Button\n          size=\"icon\"\n          className=\"cursor-pointer h-14 w-14 rounded-full shadow-lg animate-in fade-in duration-300\"\n          aria-label=\"Chat with us\"\n          onClick={toggleChat}\n        >\n          <MessageCircle className=\"h-6 w-6\" />\n        </Button>\n      )}\n    </div>\n  )\n}\n\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AALA;;;;;;AAOO,SAAS;IACd,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAErC,MAAM,aAAa;QACjB,UAAU,CAAC;IACb;IAEA,qBACE,8OAAC;QAAI,WAAU;kBACZ,uBACG,8OAAC,iIAAA,CAAA,aAAU;YAAC,YAAY;;;;;iCAE1B,8OAAC,2HAAA,CAAA,SAAM;YACL,MAAK;YACL,WAAU;YACV,cAAW;YACX,SAAS;sBAET,cAAA,8OAAC,wNAAA,CAAA,gBAAa;gBAAC,WAAU;;;;;;;;;;;;;;;;AAKnC","debugId":null}}]
}