{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/dylan/dev/customer-assist-poc/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file:///Users/dylan/dev/customer-assist-poc/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Label({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  return (\n    <LabelPrimitive.Root\n      data-slot=\"label\"\n      className={cn(\n        \"flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,MAAM,EACb,SAAS,EACT,GAAG,OAC8C;IACjD,qBACE,8OAAC,iKAAA,CAAA,OAAmB;QAClB,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,uNACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 59, "column": 0}, "map": {"version":3,"sources":["file:///Users/dylan/dev/customer-assist-poc/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-[color,box-shadow] disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40\",\n        outline:\n          \"border border-input bg-background shadow-xs hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,8cACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 116, "column": 0}, "map": {"version":3,"sources":["file:///Users/dylan/dev/customer-assist-poc/components/chat/chat.tsx"],"sourcesContent":["import { Button } from \"@/components/ui/button\"\nimport { X } from \"lucide-react\"\n\ntype ChatProps = {  \n  toggleChat: () => void\n}\n\nconst Chat = ({ toggleChat }: ChatProps) => {\n  return (\n    <div>\n                <div className=\"bg-primary p-4 flex justify-between items-center\">\n            <h3 className=\"text-primary-foreground font-medium\">Chat with us</h3>\n            <Button\n              variant=\"ghost\"\n              size=\"icon\"\n              className=\"h-8 w-8 text-primary-foreground hover:bg-primary/80\"\n              onClick={toggleChat}\n              aria-label=\"Minimize chat\"\n            >\n              <X className=\"h-4 w-4\" />\n            </Button>\n          </div>\n          <div className=\"flex-1 p-4\">{/* Chat content would go here */}</div>\n    </div>\n  )\n}"],"names":[],"mappings":";;AAAA;AACA;;;;AAMA,MAAM,OAAO,CAAC,EAAE,UAAU,EAAa;IACrC,qBACE,8OAAC;;0BACW,8OAAC;gBAAI,WAAU;;kCACnB,8OAAC;wBAAG,WAAU;kCAAsC;;;;;;kCACpD,8OAAC,2HAAA,CAAA,SAAM;wBACL,SAAQ;wBACR,MAAK;wBACL,WAAU;wBACV,SAAS;wBACT,cAAW;kCAEX,cAAA,8OAAC,4LAAA,CAAA,IAAC;4BAAC,WAAU;;;;;;;;;;;;;;;;;0BAGjB,8OAAC;gBAAI,WAAU;;;;;;;;;;;;AAGzB","debugId":null}},
    {"offset": {"line": 181, "column": 0}, "map": {"version":3,"sources":["file:///Users/dylan/dev/customer-assist-poc/components/chat/fab.tsx"],"sourcesContent":["\"use client\"\n\nimport { Button } from \"@/components/ui/button\"\nimport { MessageCircle } from \"lucide-react\"\nimport { useState } from \"react\"\nimport Chat from \"./chat\"\n\nexport function ChatFab() {\n  const [isOpen, setIsOpen] = useState(false)\n\n  const toggleChat = () => {\n    setIsOpen(!isOpen)\n  }\n\n  return (\n    <div className=\"fixed bottom-4 right-4 z-50\">\n      {isOpen ? (\n        <div className=\"bg-white rounded-lg shadow-lg w-80 h-96 flex flex-col overflow-hidden animate-in slide-in-from-bottom-5 duration-300\">\n          <Chat toggleChat={toggleChat} />\n        </div>\n      ) : (\n        <Button\n          size=\"icon\"\n          className=\"cursor-pointer h-14 w-14 rounded-full shadow-lg animate-in fade-in duration-300\"\n          aria-label=\"Chat with us\"\n          onClick={toggleChat}\n        >\n          <MessageCircle className=\"h-6 w-6\" />\n        </Button>\n      )}\n    </div>\n  )\n}\n\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AALA;;;;;;AAOO,SAAS;IACd,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAErC,MAAM,aAAa;QACjB,UAAU,CAAC;IACb;IAEA,qBACE,8OAAC;QAAI,WAAU;kBACZ,uBACC,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC,2HAAA,CAAA,UAAI;gBAAC,YAAY;;;;;;;;;;iCAGpB,8OAAC,2HAAA,CAAA,SAAM;YACL,MAAK;YACL,WAAU;YACV,cAAW;YACX,SAAS;sBAET,cAAA,8OAAC,wNAAA,CAAA,gBAAa;gBAAC,WAAU;;;;;;;;;;;;;;;;AAKnC","debugId":null}}]
}