{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/dylan/dev/customer-assist-poc/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file:///Users/dylan/dev/customer-assist-poc/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Label({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  return (\n    <LabelPrimitive.Root\n      data-slot=\"label\"\n      className={cn(\n        \"flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,MAAM,EACb,SAAS,EACT,GAAG,OAC8C;IACjD,qBACE,6LAAC,oKAAA,CAAA,OAAmB;QAClB,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,uNACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///Users/dylan/dev/customer-assist-poc/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-[color,box-shadow] disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40\",\n        outline:\n          \"border border-input bg-background shadow-xs hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,8cACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf;KAnBS","debugId":null}},
    {"offset": {"line": 123, "column": 0}, "map": {"version":3,"sources":["file:///Users/dylan/dev/customer-assist-poc/components/chat/WelcomeScreen.tsx"],"sourcesContent":["import { MessageCircleMore } from \"lucide-react\"\nimport { Button } from \"@/components/ui/button\"\n\ntype WelcomeScreenProps = {\n    onStartConversation: () => void\n}\n\nexport const WelcomeScreen = ({ onStartConversation }: WelcomeScreenProps) => {\n    return (\n        <div className=\"flex flex-col items-center space-y-4 p-6 max-w-md mx-auto\">\n            <MessageCircleMore className=\"size-16 text-primary\" />\n            <h1 className=\"text-2xl font-bold\">Message us</h1>\n            <ul className=\"space-y-2 w-full\">\n                <li className=\"flex gap-2\">\n                    <div className=\"h-1.5 w-1.5 rounded-full bg-primary flex-shrink-0 mt-2\"></div>\n                    <span className=\"flex-1\">24/7 Support</span>\n                </li>\n                <li className=\"flex gap-2\">\n                    <div className=\"h-1.5 w-1.5 rounded-full bg-primary flex-shrink-0 mt-2\"></div>\n                    <span className=\"flex-1\">Your messages are safe and secure</span>\n                </li>\n                <li className=\"flex gap-2\">\n                    <div className=\"h-1.5 w-1.5 rounded-full bg-primary flex-shrink-0 mt-2\"></div>\n                    <span className=\"flex-1\">Check and reply to messages when it suits you</span>\n                </li>\n            </ul>\n            <Button className=\"w-full mt-4 cursor-pointer\" onClick={onStartConversation}>Start Conversation</Button>\n        </div>\n    )\n}"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAMO,MAAM,gBAAgB,CAAC,EAAE,mBAAmB,EAAsB;IACrE,qBACI,6LAAC;QAAI,WAAU;;0BACX,6LAAC,uOAAA,CAAA,oBAAiB;gBAAC,WAAU;;;;;;0BAC7B,6LAAC;gBAAG,WAAU;0BAAqB;;;;;;0BACnC,6LAAC;gBAAG,WAAU;;kCACV,6LAAC;wBAAG,WAAU;;0CACV,6LAAC;gCAAI,WAAU;;;;;;0CACf,6LAAC;gCAAK,WAAU;0CAAS;;;;;;;;;;;;kCAE7B,6LAAC;wBAAG,WAAU;;0CACV,6LAAC;gCAAI,WAAU;;;;;;0CACf,6LAAC;gCAAK,WAAU;0CAAS;;;;;;;;;;;;kCAE7B,6LAAC;wBAAG,WAAU;;0CACV,6LAAC;gCAAI,WAAU;;;;;;0CACf,6LAAC;gCAAK,WAAU;0CAAS;;;;;;;;;;;;;;;;;;0BAGjC,6LAAC,8HAAA,CAAA,SAAM;gBAAC,WAAU;gBAA6B,SAAS;0BAAqB;;;;;;;;;;;;AAGzF;KAtBa","debugId":null}},
    {"offset": {"line": 260, "column": 0}, "map": {"version":3,"sources":["file:///Users/dylan/dev/customer-assist-poc/components/ui/spinner.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst spinnerVariants = cva(\n  \"inline-block animate-spin rounded-full border-current border-solid border-r-transparent align-[-0.125em] motion-reduce:animate-[spin_1.5s_linear_infinite]\",\n  {\n    variants: {\n      variant: {\n        default: \"text-primary\",\n        secondary: \"text-secondary\",\n        destructive: \"text-destructive\",\n        muted: \"text-muted-foreground\",\n      },\n      size: {\n        default: \"h-5 w-5 border-2\",\n        sm: \"h-4 w-4 border-2\",\n        lg: \"h-6 w-6 border-2\",\n        xl: \"h-8 w-8 border-3\",\n        \"2xl\": \"h-12 w-12 border-4\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  },\n)\n\nexport interface SpinnerProps extends React.HTMLAttributes<HTMLSpanElement>, VariantProps<typeof spinnerVariants> {\n  asChild?: boolean\n}\n\nconst Spinner = React.forwardRef<HTMLSpanElement, SpinnerProps>(({ className, variant, size, ...props }, ref) => {\n  return (\n    <span\n      className={cn(spinnerVariants({ variant, size, className }))}\n      ref={ref}\n      role=\"status\"\n      aria-label=\"Loading\"\n      {...props}\n    />\n  )\n})\nSpinner.displayName = \"Spinner\"\n\nexport { Spinner, spinnerVariants }\n\n"],"names":[],"mappings":";;;;;AAAA;AACA;AAEA;;;;;AAEA,MAAM,kBAAkB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACxB,8JACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,WAAW;YACX,aAAa;YACb,OAAO;QACT;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,OAAO;QACT;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAOF,MAAM,wBAAU,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAAiC,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IACvG,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,gBAAgB;YAAE;YAAS;YAAM;QAAU;QACzD,KAAK;QACL,MAAK;QACL,cAAW;QACV,GAAG,KAAK;;;;;;AAGf;;AACA,QAAQ,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 325, "column": 0}, "map": {"version":3,"sources":["file:///Users/dylan/dev/customer-assist-poc/components/chat/Inbox.tsx"],"sourcesContent":["import { Spinner } from \"../ui/spinner\"\nimport { useEffect, useState } from \"react\"\nimport { SquarePen } from \"lucide-react\"\nimport { EmptyInbox } from \"./empty-inbox\"\nimport { ConversationListItem } from \"./conversation-list-item\"\n\ninterface Conversation {\n    id: string\n    type: 'bot' | 'agent'\n    name: string\n    lastMessage: string\n    timestamp: Date\n    unread?: boolean\n}\n\nconst Inbox = () => {\n    const [isLoading, setIsLoading] = useState(true)\n    const [conversations, setConversations] = useState<Conversation[]>([])\n\n    useEffect(() => {\n        const timer = setTimeout(() => {\n            setIsLoading(false)\n            // Simulated data - remove this when connecting to real API\n            setConversations([\n                {\n                    id: '1',\n                    type: 'bot',\n                    name: 'Virtual Assistant',\n                    lastMessage: \"Hey, I was wondering if you could help me with something...\",\n                    timestamp: new Date(),\n                    unread: true\n                },\n                {\n                    id: '2',\n                    type: 'agent',\n                    name: 'Jane Smith',\n                    lastMessage: \"Thanks for your help!\",\n                    timestamp: new Date(Date.now() - 24 * 60 * 60 * 1000),\n                }\n            ])\n        }, 3000)\n\n        return () => clearTimeout(timer)\n    }, [])\n\n    if (isLoading) {\n        return (\n            <div className=\"flex-1 flex flex-col items-center justify-center\">\n                <Spinner />\n                <p className=\"text-sm text-muted-foreground mt-2\">Loading messages...</p>\n            </div>\n        )\n    }\n\n    if (conversations.length === 0) {\n        return (\n            <div className=\"flex-1 flex relative\">\n                <EmptyInbox />\n                <button className=\"absolute bottom-4 right-4 p-3 bg-primary text-primary-foreground rounded-lg shadow-lg hover:scale-105 transition-transform\">\n                    <SquarePen className=\"w-5 h-5\" />\n                </button>\n            </div>\n        )\n    }\n\n    return (\n        <div className=\"flex-1 flex relative\">\n            <div className=\"flex-1 animate-fadeIn\">\n                <p className=\"text-sm text-gray-700 mb-6\">ACME virtual assistant is here for you 24/7. Our human team will get back to you within 48 hours.</p>\n                <h2 className=\"text-lg font-bold mb-4\">Messages</h2>\n                <div className=\"-mx-4\">\n                    {conversations.map((conversation) => (\n                        <ConversationListItem\n                            key={conversation.id}\n                            {...conversation}\n                        />\n                    ))}\n                </div>\n            </div>\n            \n            <button className=\"absolute bottom-4 right-4 p-3 bg-primary text-primary-foreground rounded-lg shadow-lg hover:scale-105 transition-transform\">\n                <SquarePen className=\"w-5 h-5\" />\n            </button>\n        </div>\n    )\n}\n\nexport default Inbox"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;;;;;;;;;;;;;;AAaA,MAAM,QAAQ;;IACV,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAkB,EAAE;IAErE,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;2BAAE;YACN,MAAM,QAAQ;yCAAW;oBACrB,aAAa;oBACb,2DAA2D;oBAC3D,iBAAiB;wBACb;4BACI,IAAI;4BACJ,MAAM;4BACN,MAAM;4BACN,aAAa;4BACb,WAAW,IAAI;4BACf,QAAQ;wBACZ;wBACA;4BACI,IAAI;4BACJ,MAAM;4BACN,MAAM;4BACN,aAAa;4BACb,WAAW,IAAI,KAAK,KAAK,GAAG,KAAK,KAAK,KAAK,KAAK;wBACpD;qBACH;gBACL;wCAAG;YAEH;mCAAO,IAAM,aAAa;;QAC9B;0BAAG,EAAE;IAEL,IAAI,WAAW;QACX,qBACI,6LAAC;YAAI,WAAU;;8BACX,6LAAC,+HAAA,CAAA,UAAO;;;;;8BACR,6LAAC;oBAAE,WAAU;8BAAqC;;;;;;;;;;;;IAG9D;IAEA,IAAI,cAAc,MAAM,KAAK,GAAG;QAC5B,qBACI,6LAAC;YAAI,WAAU;;8BACX,6LAAC;;;;;8BACD,6LAAC;oBAAO,WAAU;8BACd,cAAA,6LAAC,mNAAA,CAAA,YAAS;wBAAC,WAAU;;;;;;;;;;;;;;;;;IAIrC;IAEA,qBACI,6LAAC;QAAI,WAAU;;0BACX,6LAAC;gBAAI,WAAU;;kCACX,6LAAC;wBAAE,WAAU;kCAA6B;;;;;;kCAC1C,6LAAC;wBAAG,WAAU;kCAAyB;;;;;;kCACvC,6LAAC;wBAAI,WAAU;kCACV,cAAc,GAAG,CAAC,CAAC,6BAChB,6LAAC;gCAEI,GAAG,YAAY;+BADX,aAAa,EAAE;;;;;;;;;;;;;;;;0BAOpC,6LAAC;gBAAO,WAAU;0BACd,cAAA,6LAAC,mNAAA,CAAA,YAAS;oBAAC,WAAU;;;;;;;;;;;;;;;;;AAIrC;GAtEM;KAAA;uCAwES","debugId":null}},
    {"offset": {"line": 514, "column": 0}, "map": {"version":3,"sources":["file:///Users/dylan/dev/customer-assist-poc/components/chat/ChatWindow.tsx"],"sourcesContent":["import { Button } from \"@/components/ui/button\"\nimport { X } from \"lucide-react\"\nimport { WelcomeScreen } from \"./WelcomeScreen\"\nimport Inbox from \"./Inbox\"\nimport { useState } from \"react\"\n\ntype ChatProps = {\n    toggleChat: () => void\n}\n\nexport const ChatWindow = ({ toggleChat }: ChatProps) => {\n    const [showInbox, setShowInbox] = useState(false)\n    \n    const handleStartConversation = () => {\n        setShowInbox(true)\n    }\n    \n    return (\n        <div className=\"bg-white rounded-lg shadow-lg w-90 h-150 flex flex-col overflow-hidden animate-in slide-in-from-bottom-5 duration-300\">\n            <div className=\"bg-primary p-2 flex justify-between items-center\">\n                <div className=\"w-8\"></div> {/* Spacer to balance the close button */}\n                <h3 className=\"text-primary-foreground font-medium text-center flex-1\">ACME Messaging</h3>\n                <Button\n                    variant=\"ghost\"\n                    size=\"icon\"\n                    className=\"h-8 w-8 text-primary-foreground hover:text-primary-foreground hover:bg-primary-secondary cursor-pointer\"\n                    onClick={toggleChat}\n                    aria-label=\"Minimize chat\"\n                >\n                    <X className=\"h-4 w-4\" />\n                </Button>\n            </div>\n            <div className=\"flex flex-1 p-4\">\n                {showInbox ? (\n                    <div className=\"flex flex-1 animate-in fade-in slide-in-from-right-5 duration-300\">\n                        <Inbox />\n                    </div>\n                ) : (\n                    <WelcomeScreen onStartConversation={handleStartConversation} />\n                )}\n            </div>\n        </div>\n    )\n}"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;;;;;;;;AAMO,MAAM,aAAa,CAAC,EAAE,UAAU,EAAa;;IAChD,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,MAAM,0BAA0B;QAC5B,aAAa;IACjB;IAEA,qBACI,6LAAC;QAAI,WAAU;;0BACX,6LAAC;gBAAI,WAAU;;kCACX,6LAAC;wBAAI,WAAU;;;;;;oBAAY;kCAC3B,6LAAC;wBAAG,WAAU;kCAAyD;;;;;;kCACvE,6LAAC,8HAAA,CAAA,SAAM;wBACH,SAAQ;wBACR,MAAK;wBACL,WAAU;wBACV,SAAS;wBACT,cAAW;kCAEX,cAAA,6LAAC,+LAAA,CAAA,IAAC;4BAAC,WAAU;;;;;;;;;;;;;;;;;0BAGrB,6LAAC;gBAAI,WAAU;0BACV,0BACG,6LAAC;oBAAI,WAAU;8BACX,cAAA,6LAAC,+HAAA,CAAA,UAAK;;;;;;;;;yCAGV,6LAAC,uIAAA,CAAA,gBAAa;oBAAC,qBAAqB;;;;;;;;;;;;;;;;;AAKxD;GAjCa;KAAA","debugId":null}},
    {"offset": {"line": 627, "column": 0}, "map": {"version":3,"sources":["file:///Users/dylan/dev/customer-assist-poc/components/chat/FAB.tsx"],"sourcesContent":["\"use client\"\n\nimport { Button } from \"@/components/ui/button\"\nimport { MessageCircle } from \"lucide-react\"\nimport { useState } from \"react\"\nimport { ChatWindow } from \"./ChatWindow\"\n\nexport function ChatFab() {\n  const [isOpen, setIsOpen] = useState(false)\n\n  const toggleChat = () => {\n    setIsOpen(!isOpen)\n  }\n\n  return (\n    <div className=\"fixed bottom-4 right-4 z-50\">\n      {isOpen ? (\n          <ChatWindow toggleChat={toggleChat} />\n      ) : (\n        <Button\n          size=\"icon\"\n          className=\"cursor-pointer h-14 w-14 rounded-full shadow-lg animate-in fade-in duration-300\"\n          aria-label=\"Chat with us\"\n          onClick={toggleChat}\n        >\n          <MessageCircle className=\"h-6 w-6\" />\n        </Button>\n      )}\n    </div>\n  )\n}\n\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;;;AALA;;;;;AAOO,SAAS;;IACd,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAErC,MAAM,aAAa;QACjB,UAAU,CAAC;IACb;IAEA,qBACE,6LAAC;QAAI,WAAU;kBACZ,uBACG,6LAAC,oIAAA,CAAA,aAAU;YAAC,YAAY;;;;;iCAE1B,6LAAC,8HAAA,CAAA,SAAM;YACL,MAAK;YACL,WAAU;YACV,cAAW;YACX,SAAS;sBAET,cAAA,6LAAC,2NAAA,CAAA,gBAAa;gBAAC,WAAU;;;;;;;;;;;;;;;;AAKnC;GAvBgB;KAAA","debugId":null}}]
}