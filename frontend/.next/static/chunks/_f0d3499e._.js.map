{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/dylan/dev/customer-assist-poc/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file:///Users/dylan/dev/customer-assist-poc/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Label({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  return (\n    <LabelPrimitive.Root\n      data-slot=\"label\"\n      className={cn(\n        \"flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,MAAM,EACb,SAAS,EACT,GAAG,OAC8C;IACjD,qBACE,6LAAC,oKAAA,CAAA,OAAmB;QAClB,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,uNACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///Users/dylan/dev/customer-assist-poc/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-[color,box-shadow] disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40\",\n        outline:\n          \"border border-input bg-background shadow-xs hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,8cACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf;KAnBS","debugId":null}},
    {"offset": {"line": 123, "column": 0}, "map": {"version":3,"sources":["file:///Users/dylan/dev/customer-assist-poc/components/chat/WelcomeScreen.tsx"],"sourcesContent":["import { MessageCircleMore } from \"lucide-react\"\nimport { Button } from \"@/components/ui/button\"\n\ntype WelcomeScreenProps = {\n    onStartConversation: () => void\n}\n\nexport const WelcomeScreen = ({ onStartConversation }: WelcomeScreenProps) => {\n    return (\n        <div className=\"flex flex-col items-center max-w-md p-6 mx-auto space-y-4\">\n            <MessageCircleMore className=\"size-16 text-primary\" />\n            <h1 className=\"text-2xl font-bold\">Message us</h1>\n            <ul className=\"w-full space-y-2\">\n                <li className=\"flex gap-2\">\n                    <div className=\"h-1.5 w-1.5 rounded-full bg-primary flex-shrink-0 mt-2\"></div>\n                    <span className=\"flex-1\">24/7 Support</span>\n                </li>\n                <li className=\"flex gap-2\">\n                    <div className=\"h-1.5 w-1.5 rounded-full bg-primary flex-shrink-0 mt-2\"></div>\n                    <span className=\"flex-1\">Your messages are safe and secure</span>\n                </li>\n                <li className=\"flex gap-2\">\n                    <div className=\"h-1.5 w-1.5 rounded-full bg-primary flex-shrink-0 mt-2\"></div>\n                    <span className=\"flex-1\">Check and reply to messages when it suits you</span>\n                </li>\n            </ul>\n            <Button className=\"w-full mt-4 cursor-pointer\" onClick={onStartConversation}>Start Conversation</Button>\n        </div>\n    )\n}"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAMO,MAAM,gBAAgB,CAAC,EAAE,mBAAmB,EAAsB;IACrE,qBACI,6LAAC;QAAI,WAAU;;0BACX,6LAAC,uOAAA,CAAA,oBAAiB;gBAAC,WAAU;;;;;;0BAC7B,6LAAC;gBAAG,WAAU;0BAAqB;;;;;;0BACnC,6LAAC;gBAAG,WAAU;;kCACV,6LAAC;wBAAG,WAAU;;0CACV,6LAAC;gCAAI,WAAU;;;;;;0CACf,6LAAC;gCAAK,WAAU;0CAAS;;;;;;;;;;;;kCAE7B,6LAAC;wBAAG,WAAU;;0CACV,6LAAC;gCAAI,WAAU;;;;;;0CACf,6LAAC;gCAAK,WAAU;0CAAS;;;;;;;;;;;;kCAE7B,6LAAC;wBAAG,WAAU;;0CACV,6LAAC;gCAAI,WAAU;;;;;;0CACf,6LAAC;gCAAK,WAAU;0CAAS;;;;;;;;;;;;;;;;;;0BAGjC,6LAAC,8HAAA,CAAA,SAAM;gBAAC,WAAU;gBAA6B,SAAS;0BAAqB;;;;;;;;;;;;AAGzF;KAtBa","debugId":null}},
    {"offset": {"line": 260, "column": 0}, "map": {"version":3,"sources":["file:///Users/dylan/dev/customer-assist-poc/components/ui/spinner.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst spinnerVariants = cva(\n  \"inline-block animate-spin rounded-full border-current border-solid border-r-transparent align-[-0.125em] motion-reduce:animate-[spin_1.5s_linear_infinite]\",\n  {\n    variants: {\n      variant: {\n        default: \"text-primary\",\n        secondary: \"text-secondary\",\n        destructive: \"text-destructive\",\n        muted: \"text-muted-foreground\",\n      },\n      size: {\n        default: \"h-5 w-5 border-2\",\n        sm: \"h-4 w-4 border-2\",\n        lg: \"h-6 w-6 border-2\",\n        xl: \"h-8 w-8 border-3\",\n        \"2xl\": \"h-12 w-12 border-4\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  },\n)\n\nexport interface SpinnerProps extends React.HTMLAttributes<HTMLSpanElement>, VariantProps<typeof spinnerVariants> {\n  asChild?: boolean\n}\n\nconst Spinner = React.forwardRef<HTMLSpanElement, SpinnerProps>(({ className, variant, size, ...props }, ref) => {\n  return (\n    <span\n      className={cn(spinnerVariants({ variant, size, className }))}\n      ref={ref}\n      role=\"status\"\n      aria-label=\"Loading\"\n      {...props}\n    />\n  )\n})\nSpinner.displayName = \"Spinner\"\n\nexport { Spinner, spinnerVariants }\n\n"],"names":[],"mappings":";;;;;AAAA;AACA;AAEA;;;;;AAEA,MAAM,kBAAkB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACxB,8JACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,WAAW;YACX,aAAa;YACb,OAAO;QACT;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,OAAO;QACT;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAOF,MAAM,wBAAU,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAAiC,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IACvG,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,gBAAgB;YAAE;YAAS;YAAM;QAAU;QACzD,KAAK;QACL,MAAK;QACL,cAAW;QACV,GAAG,KAAK;;;;;;AAGf;;AACA,QAAQ,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 325, "column": 0}, "map": {"version":3,"sources":["file:///Users/dylan/dev/customer-assist-poc/components/ui/link-card.tsx"],"sourcesContent":["import { cn } from \"@/lib/utils\"\nimport Link from \"next/link\"\nimport { ReactNode } from \"react\"\n\ninterface LinkCardProps extends React.HTMLAttributes<HTMLAnchorElement> {\n    href: string\n    title: string\n    subtitle: string\n    icon?: ReactNode\n}\n\nconst LinkCard = ({ \n    href, \n    title, \n    subtitle, \n    icon, \n    className, \n    ...props \n}: LinkCardProps) => {\n    return (\n        <Link\n            href={href}\n            className={cn(\n                \"flex items-start gap-4 p-4 rounded-lg border bg-card text-card-foreground hover:bg-accent transition-colors\",\n                className\n            )}\n            {...props}\n        >\n            {icon && (\n                <div className=\"flex-shrink-0 mt-0.5\">\n                    {icon}\n                </div>\n            )}\n            <div className=\"flex flex-col min-w-0\">\n                <p className=\"text-sm font-medium text-foreground\">{title}</p>\n                <p className=\"text-sm text-muted-foreground\">{subtitle}</p>\n            </div>\n        </Link>\n    )\n}\n\nexport { LinkCard }\nexport type { LinkCardProps } "],"names":[],"mappings":";;;;AAAA;AACA;;;;AAUA,MAAM,WAAW,CAAC,EACd,IAAI,EACJ,KAAK,EACL,QAAQ,EACR,IAAI,EACJ,SAAS,EACT,GAAG,OACS;IACZ,qBACI,6LAAC,+JAAA,CAAA,UAAI;QACD,MAAM;QACN,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACR,+GACA;QAEH,GAAG,KAAK;;YAER,sBACG,6LAAC;gBAAI,WAAU;0BACV;;;;;;0BAGT,6LAAC;gBAAI,WAAU;;kCACX,6LAAC;wBAAE,WAAU;kCAAuC;;;;;;kCACpD,6LAAC;wBAAE,WAAU;kCAAiC;;;;;;;;;;;;;;;;;;AAI9D;KA5BM","debugId":null}},
    {"offset": {"line": 393, "column": 0}, "map": {"version":3,"sources":["file:///Users/dylan/dev/customer-assist-poc/components/chat/ConversationListItem.tsx"],"sourcesContent":["import { Bot, UserRound } from \"lucide-react\"\nimport { format } from \"date-fns\"\nimport { Conversation } from \"./Inbox\"\n\ninterface ConversationListItemProps {\n    conversation: Conversation\n    onClick?: () => void\n}\n\nexport const ConversationListItem: React.FC<ConversationListItemProps> = ({ \n    conversation,\n    onClick \n}) => {\n    return (\n        <>\n            <button\n                className=\"relative w-full px-4 py-3 text-left cursor-pointer hover:bg-accent/50\"\n                role=\"listitem\"\n                aria-label={`Conversation about ${conversation.subject}`}\n                onClick={onClick}\n            >\n                <div className=\"flex items-center gap-3\">\n                    {/* Avatar with unread indicator */}\n                    <div className=\"relative\">\n                        {conversation.unread && (\n                            <div \n                                className=\"absolute w-2.5 h-2.5 bg-red-500 rounded-full left-0 top-0\" \n                                aria-label=\"unread conversation\"\n                            />\n                        )}\n                        <div className=\"flex items-center justify-center w-10 h-10 bg-gray-100 rounded-full\">\n                            {conversation.type === 'bot' ? (\n                                <Bot className=\"w-5 h-5 text-gray-600\" aria-hidden=\"true\" />\n                            ) : (\n                                <UserRound className=\"w-5 h-5 text-gray-600\" aria-hidden=\"true\" />\n                            )}\n                        </div>\n                    </div>\n\n                    {/* Content */}\n                    <div className=\"flex-1 min-w-0\">\n                        <span className=\"block mb-1 text-xs text-gray-500\">\n                            {format(conversation.timestamp, 'EEE h:mma')}\n                        </span>\n                        <div className=\"flex items-start justify-between\">\n                            <h3 className={`text-base ${conversation.unread ? 'font-bold' : 'font-medium'}`}>\n                                {conversation.subject}\n                            </h3>\n                        </div>\n                        <p className={`text-sm truncate ${conversation.unread ? 'text-gray-800' : 'text-gray-500'}`}>\n                            {conversation.lastMessage}\n                        </p>\n                    </div>\n                </div>\n            </button>\n            <div className=\"h-px mx-4 bg-gray-200\" role=\"separator\" />\n        </>\n    )\n} "],"names":[],"mappings":";;;;AAAA;AAAA;AACA;;;;AAQO,MAAM,uBAA4D,CAAC,EACtE,YAAY,EACZ,OAAO,EACV;IACG,qBACI;;0BACI,6LAAC;gBACG,WAAU;gBACV,MAAK;gBACL,cAAY,CAAC,mBAAmB,EAAE,aAAa,OAAO,EAAE;gBACxD,SAAS;0BAET,cAAA,6LAAC;oBAAI,WAAU;;sCAEX,6LAAC;4BAAI,WAAU;;gCACV,aAAa,MAAM,kBAChB,6LAAC;oCACG,WAAU;oCACV,cAAW;;;;;;8CAGnB,6LAAC;oCAAI,WAAU;8CACV,aAAa,IAAI,KAAK,sBACnB,6LAAC,mMAAA,CAAA,MAAG;wCAAC,WAAU;wCAAwB,eAAY;;;;;6DAEnD,6LAAC,mNAAA,CAAA,YAAS;wCAAC,WAAU;wCAAwB,eAAY;;;;;;;;;;;;;;;;;sCAMrE,6LAAC;4BAAI,WAAU;;8CACX,6LAAC;oCAAK,WAAU;8CACX,CAAA,GAAA,wJAAA,CAAA,SAAM,AAAD,EAAE,aAAa,SAAS,EAAE;;;;;;8CAEpC,6LAAC;oCAAI,WAAU;8CACX,cAAA,6LAAC;wCAAG,WAAW,CAAC,UAAU,EAAE,aAAa,MAAM,GAAG,cAAc,eAAe;kDAC1E,aAAa,OAAO;;;;;;;;;;;8CAG7B,6LAAC;oCAAE,WAAW,CAAC,iBAAiB,EAAE,aAAa,MAAM,GAAG,kBAAkB,iBAAiB;8CACtF,aAAa,WAAW;;;;;;;;;;;;;;;;;;;;;;;0BAKzC,6LAAC;gBAAI,WAAU;gBAAwB,MAAK;;;;;;;;AAGxD;KAjDa","debugId":null}},
    {"offset": {"line": 527, "column": 0}, "map": {"version":3,"sources":["file:///Users/dylan/dev/customer-assist-poc/components/ui/filter-button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cn } from \"@/lib/utils\"\n\ninterface FilterButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  selected?: boolean\n  onToggle?: (selected: boolean) => void\n  children: React.ReactNode\n}\n\nconst FilterButton = React.forwardRef<HTMLButtonElement, FilterButtonProps>(\n  ({ selected = false, onToggle, className, children, onClick, ...props }, ref) => {\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n      onClick?.(event)\n      onToggle?.(!selected)\n    }\n\n    return (\n      <button\n        ref={ref}\n        onClick={handleClick}\n        className={cn(\n          \"inline-flex items-center px-4 py-1.5 text-sm font-medium rounded-full transition-all duration-200\",\n          \"hover:bg-muted border cursor-pointer\",\n          selected && \"bg-primary text-primary-foreground hover:bg-primary/90 border-primary\",\n          !selected && \"bg-background text-foreground border-primary-background-200\",\n          className\n        )}\n        {...props}\n      >\n        {children}\n      </button>\n    )\n  }\n)\nFilterButton.displayName = \"FilterButton\"\n\nexport { FilterButton } "],"names":[],"mappings":";;;;AAAA;AACA;;;;AAQA,MAAM,6BAAe,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAClC,CAAC,EAAE,WAAW,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,OAAO,EAAE,GAAG,OAAO,EAAE;IACvE,MAAM,cAAc,CAAC;QACnB,UAAU;QACV,WAAW,CAAC;IACd;IAEA,qBACE,6LAAC;QACC,KAAK;QACL,SAAS;QACT,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,qGACA,wCACA,YAAY,yEACZ,CAAC,YAAY,+DACb;QAED,GAAG,KAAK;kBAER;;;;;;AAGP;;AAEF,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 568, "column": 0}, "map": {"version":3,"sources":["file:///Users/dylan/dev/customer-assist-poc/components/chat/Inbox.tsx"],"sourcesContent":["import { Spinner } from \"../ui/spinner\"\nimport { useEffect, useState } from \"react\"\nimport { SquarePen, Calendar, HelpCircle, Search } from \"lucide-react\"\nimport { LinkCard } from \"../ui/link-card\"\nimport { ConversationListItem } from \"./ConversationListItem\"\nimport { FilterButton } from \"../ui/filter-button\"\n\nexport interface Conversation {\n    id: string\n    type: 'bot' | 'agent'\n    name: string\n    subject: string\n    lastMessage: string\n    timestamp: Date\n    unread: boolean\n}\n\nexport interface InboxProps {\n    onSelectConversation?: (id: string) => void\n}\n\nconst EmptyInbox = () => {\n    return (\n        <div className=\"flex-1\">\n            <div className=\"mt-4 mb-10\">\n                <p className=\"font-medium text-gray-900\">You have no conversations.</p>\n            </div>\n\n            <div>\n                <h3 className=\"mb-3 text-lg font-medium text-gray-900\">Helpful resources</h3>\n                <div className=\"space-y-2\">\n                    <LinkCard\n                        href=\"#\"\n                        icon={<Calendar className=\"w-5 h-5\" />}\n                        title=\"Book a home loan appointment\"\n                        subtitle=\"Speak to a specialist\"\n                    />\n                    <LinkCard\n                        href=\"#\"\n                        icon={<HelpCircle className=\"w-5 h-5\" />}\n                        title=\"Frequently asked questions\"\n                        subtitle=\"Find answers to common questions\"\n                    />\n                    <LinkCard\n                        href=\"#\"\n                        icon={<Search className=\"w-5 h-5\" />}\n                        title=\"Suspicious transaction?\"\n                        subtitle=\"Here's what to do...\"\n                    />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst Inbox = ({ onSelectConversation }: InboxProps) => {\n    const [isLoading, setIsLoading] = useState(true)\n    const [activeConversations, setActiveConversations] = useState<Conversation[]>([])\n    const [archivedConversations, setArchivedConversations] = useState<Conversation[]>([])\n    const [activeFilter, setActiveFilter] = useState<'active' | 'archived'>('active')\n\n    useEffect(() => {\n        const timer = setTimeout(() => {\n            setIsLoading(false)\n            // Sample data split between active and archived\n            setActiveConversations([\n                {\n                    id: '1',\n                    type: 'bot',\n                    name: 'Virtual Assistant',\n                    subject: 'General Inquiry',\n                    lastMessage: 'How can I help you today?',\n                    timestamp: new Date(),\n                    unread: true\n                },\n                {\n                    id: '2',\n                    type: 'agent',\n                    name: 'Sarah from Support',\n                    subject: 'Loan Application Review',\n                    lastMessage: \"I've reviewed your loan application...\",\n                    timestamp: new Date(Date.now() - 24 * 60 * 60 * 1000),\n                    unread: false\n                },\n            ])\n\n            setArchivedConversations([\n                {\n                    id: '3',\n                    type: 'agent',\n                    name: 'Michael Chen',\n                    subject: 'Credit Card Application',\n                    lastMessage: 'Your application has been approved',\n                    timestamp: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000),\n                    unread: true\n                },\n                {\n                    id: '4',\n                    type: 'bot',\n                    name: 'Virtual Assistant',\n                    subject: 'Account Security Alert',\n                    lastMessage: 'We noticed a login from a new device',\n                    timestamp: new Date(Date.now() - 3 * 24 * 60 * 60 * 1000),\n                    unread: false\n                }\n            ])\n        }, 200)\n\n        return () => clearTimeout(timer)\n    }, [])\n\n    const currentConversations = activeFilter === 'active' ? activeConversations : archivedConversations\n\n    // Add click handler to ConversationListItem\n    const handleConversationClick = (id: string) => {\n        onSelectConversation?.(id)\n    }\n\n    const handleNewMessage = () => {\n        // Create a new conversation ID and navigate to it\n        const newConversationId = 'new'\n        onSelectConversation?.(newConversationId)\n    }\n\n    if (isLoading) {\n        return (\n            <div className=\"flex flex-col items-center justify-center flex-1 p-4\">\n                <Spinner />\n                <p className=\"mt-2 text-sm text-muted-foreground\">Loading conversations...</p>\n            </div>\n        )\n    }\n\n    return (\n        <div className=\"flex flex-1 h-full p-4\">\n            <div className=\"flex flex-col flex-1 h-full\">\n                <div>\n                    <p className=\"text-gray-700 text-sm/5\">ACME virtual assistant is here for you 24/7. Our human team will get back to you within 48 hours.</p>\n                    <h2 className=\"mt-6 text-lg font-bold\">Messages</h2>\n                    <div className=\"flex gap-2 mt-4\">\n                        <FilterButton\n                            selected={activeFilter === 'active'}\n                            onToggle={() => setActiveFilter('active')}\n                        >\n                            Active\n                        </FilterButton>\n                        <FilterButton\n                            selected={activeFilter === 'archived'}\n                            onToggle={() => setActiveFilter('archived')}\n                        >\n                            Archived\n                        </FilterButton>\n                    </div>\n                </div>\n\n                {(currentConversations.length === 0) ? (\n                    <EmptyInbox />\n                ) : (\n                    <div className=\"flex-1 mt-6 overflow-y-auto\">\n                        {currentConversations.map((conversation) => (\n                            <ConversationListItem\n                                key={conversation.id}\n                                conversation={conversation}\n                                onClick={() => handleConversationClick(conversation.id)}\n                            />\n                        ))}\n                    </div>\n                )}\n\n                <button\n                    onClick={handleNewMessage}\n                    className=\"absolute p-3 transition-transform rounded-lg shadow-lg cursor-pointer bottom-4 right-4 bg-primary text-primary-foreground hover:scale-105\"\n                >\n                    <SquarePen className=\"w-6 h-6\" />\n                </button>\n            </div>\n        </div>\n    )\n}\n\nexport default Inbox"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 899, "column": 0}, "map": {"version":3,"sources":["file:///Users/dylan/dev/customer-assist-poc/components/chat/Conversation.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { Spinner } from '../ui/spinner';\nimport { format } from 'date-fns';\nimport { Bot, UserRound, Send } from 'lucide-react';\n\ninterface Message {\n    id: string;\n    content: string;\n    sender: 'assistant' | 'user';\n    type?: 'bot' | 'agent';\n    timestamp: string;\n}\n\ninterface ConversationData {\n    id: string;\n    startDate: string;\n    messages: Message[];\n}\n\nexport const Conversation = ({ conversationId }: { conversationId: string }) => {\n    const [loading, setLoading] = useState(true);\n    const [conversation, setConversation] = useState<ConversationData | null>(null);\n    const [messageInput, setMessageInput] = useState('');\n\n    useEffect(() => {\n        // Mock fetch - replace with actual API call\n        const fetchConversation = async () => {\n            setLoading(true);\n            try {\n                // Simulate API delay\n                await new Promise(resolve => setTimeout(resolve, 1000));\n\n                // Mock data\n                const mockData: ConversationData = {\n                    id: conversationId,\n                    startDate: '2022-08-22T13:53:00',\n                    messages: [\n                        {\n                            id: '1',\n                            content: 'Hello! How can I assist you today?',\n                            sender: 'assistant',\n                            type: 'bot',\n                            timestamp: '2022-08-22T13:53:00'\n                        },\n                        {\n                            id: '2',\n                            content: 'I need help with my account settings.',\n                            sender: 'user',\n                            timestamp: '2022-08-22T13:53:30'\n                        },\n                        {\n                            id: '3',\n                            content: 'Let me connect you with a support agent who can help.',\n                            sender: 'assistant',\n                            type: 'bot',\n                            timestamp: '2022-08-22T13:54:00'\n                        },\n                        {\n                            id: '4',\n                            content: 'Hi there! I\\'m Sarah from the support team. I can help you with your account settings.',\n                            sender: 'assistant',\n                            type: 'agent',\n                            timestamp: '2022-08-22T13:54:30'\n                        },\n                        {\n                            id: '5',\n                            content: 'Specifically, I can\\'t figure out how to change my notification preferences.',\n                            sender: 'user',\n                            timestamp: '2022-08-22T13:55:00'\n                        },\n                        {\n                            id: '6',\n                            content: 'I can help you with that! To change your notification preferences, go to Settings > Notifications. You\\'ll see options for email, push, and in-app notifications there.',\n                            sender: 'assistant',\n                            type: 'agent',\n                            timestamp: '2022-08-22T13:55:30'\n                        },\n                        {\n                            id: '7',\n                            content: 'Thanks! I see those options now. One more question - can I set quiet hours?',\n                            sender: 'user',\n                            timestamp: '2022-08-22T13:56:00'\n                        },\n                        {\n                            id: '8',\n                            content: 'Yes, absolutely! In the same Notifications section, scroll down to \"Quiet Hours.\" You can set different schedules for weekdays and weekends.',\n                            sender: 'assistant',\n                            type: 'agent',\n                            timestamp: '2022-08-22T13:56:30'\n                        },\n                        {\n                            id: '9',\n                            content: 'Perfect, that\\'s exactly what I needed. Thank you so much for your help!',\n                            sender: 'user',\n                            timestamp: '2022-08-22T13:57:00'\n                        },\n                        {\n                            id: '10',\n                            content: 'You\\'re welcome! Is there anything else you\\'d like help with today?',\n                            sender: 'assistant',\n                            type: 'agent',\n                            timestamp: '2022-08-22T13:57:30'\n                        }\n                    ]\n                };\n                setConversation(mockData);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchConversation();\n    }, [conversationId]);\n\n    const handleSubmit = (e: React.FormEvent) => {\n        e.preventDefault();\n\n        if (!messageInput.trim() || !conversation) return;\n\n        const newMessage: Message = {\n            id: String(Date.now()),\n            content: messageInput.trim(),\n            sender: 'user',\n            timestamp: new Date().toISOString()\n        };\n\n        setConversation(prev => prev ? {\n            ...prev,\n            messages: [...prev.messages, newMessage]\n        } : null);\n\n        setMessageInput('');\n    };\n\n    if (loading) {\n        return (\n            <div className=\"flex items-center justify-center w-full h-full\">\n                <div className=\"text-center\">\n                    <Spinner />\n                    <p className=\"text-sm text-gray-500\">Loading messages...</p>\n                </div>\n            </div>\n        );\n    }\n\n    if (!conversation) {\n        return <div>Conversation not found</div>;\n    }\n\n    // Group messages by sender\n    const messageGroups = conversation.messages.reduce((groups: Message[][], message, index, array) => {\n        if (index === 0 || message.sender !== array[index - 1].sender || message.type !== array[index - 1].type) {\n            groups.push([message]);\n        } else {\n            groups[groups.length - 1].push(message);\n        }\n        return groups;\n    }, []);\n\n    return (\n        <div className=\"flex flex-col h-full\">\n            <div className=\"flex-1 overflow-y-auto\">\n                <div className=\"p-4 mt-2 text-sm\">\n                    <p className=\"text-center text-gray-500\">\n                        Privacy Notice: Messages in this conversation may be reviewed for training and quality improvement purposes.\n                        Your information is handled in accordance with our Privacy Policy.\n                    </p>\n                </div>\n\n                <div className=\"p-3\">\n                    <div className=\"mb-4 text-sm font-semibold text-center text-gray-500\">\n                        {format(new Date(conversation.startDate), \"dd MMMM, yyyy, h:mmaaa\")}\n                    </div>\n\n                    <div className=\"space-y-4\">\n                        {messageGroups.map((group) => (\n                            <div key={group[0].id} className=\"space-y-1\">\n                                {group.map((message, index) => (\n                                    <div\n                                        key={message.id}\n                                        className={`flex items-start gap-2 ${message.sender === 'user' ? 'flex-row-reverse' : 'flex-row'}`}\n                                    >\n                                        {message.sender === 'assistant' && index === group.length - 1 && (\n                                            <div className=\"flex items-center justify-center w-10 h-10 bg-gray-100 rounded-full\">\n                                                {message.type === 'agent' ? (\n                                                    <UserRound className=\"w-5 h-5 text-gray-600\" aria-hidden=\"true\" />\n                                                ) : (\n                                                    <Bot className=\"w-5 h-5 text-gray-600\" aria-hidden=\"true\" />\n                                                )}\n                                            </div>\n                                        )}\n                                        <div className={`max-w-[70%] rounded-lg p-3 text-sm ${message.sender === 'user' ? 'bg-black text-white' : 'bg-gray-100 text-black'\n                                            }`}>\n                                            <div>{message.content}</div>\n                                            {index === group.length - 1 && (\n                                                <div className=\"text-[10px] mt-1 opacity-70\">\n                                                    {format(new Date(message.timestamp), \"h:mmaaa\")}\n                                                </div>\n                                            )}\n                                        </div>\n                                    </div>\n                                ))}\n                            </div>\n                        ))}\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"absolute bottom-0 left-0 right-0 px-4 py-2 bg-white border-t\">\n                <form onSubmit={handleSubmit} className=\"flex items-center gap-2\">\n                    <textarea\n                        value={messageInput}\n                        onChange={(e) => setMessageInput(e.target.value)}\n                        placeholder=\"Type your message...\"\n                        rows={1}\n                        className=\"flex-1 min-w-0 px-3 py-2 overflow-y-auto text-sm border rounded-md resize-none bg-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring\"\n                    />\n                    <button\n                        type=\"submit\"\n                        className=\"inline-flex items-center justify-center w-10 h-10 rounded-md bg-primary text-primary-foreground hover:bg-primary/90\"\n                        aria-label=\"Send message\"\n                    >\n                        <Send className=\"w-5 h-5\" />\n                    </button>\n                </form>\n            </div>\n        </div>\n    );\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1261, "column": 0}, "map": {"version":3,"sources":["file:///Users/dylan/dev/customer-assist-poc/components/chat/ChatWindow.tsx"],"sourcesContent":["import { Button } from \"@/components/ui/button\"\nimport { X, ArrowLeft } from \"lucide-react\"\nimport { WelcomeScreen } from \"./WelcomeScreen\"\nimport Inbox from \"./Inbox\"\nimport { useState } from \"react\"\nimport { Conversation } from \"./Conversation\"\n\ntype ChatProps = {\n    toggleChat: () => void\n}\n\nexport const ChatWindow = ({ toggleChat }: ChatProps) => {\n    const [showInbox, setShowInbox] = useState(false)\n    const [selectedConversation, setSelectedConversation] = useState<string | null>(null)\n\n    const handleStartConversation = () => {\n        setShowInbox(true)\n    }\n\n    const handleBackClick = () => {\n        if (selectedConversation) {\n            setSelectedConversation(null)\n        } else {\n            setShowInbox(false)\n        }\n    }\n\n    return (\n        <div className=\"relative flex flex-col overflow-hidden duration-300 bg-white rounded-lg shadow-lg w-90 max-h-[80vh] h-[600px] animate-in slide-in-from-bottom-5\">\n            <div className=\"flex items-center justify-between p-2 bg-primary\">\n                {selectedConversation && (\n                    <Button\n                        variant=\"ghost\"\n                        size=\"icon\"\n                        className=\"w-8 h-8 cursor-pointer text-primary-foreground hover:text-primary-foreground hover:bg-primary-secondary\"\n                        onClick={handleBackClick}\n                        aria-label=\"Back to inbox\"\n                    >\n                        <ArrowLeft className=\"w-4 h-4\" />\n                    </Button>\n                )}\n                <h3 className=\"flex-1 font-medium text-center text-primary-foreground\">\n                    {selectedConversation ? \"Conversation\" : \"ACME Messaging\"}\n                </h3>\n                <Button\n                    variant=\"ghost\"\n                    size=\"icon\"\n                    className=\"w-8 h-8 cursor-pointer text-primary-foreground hover:text-primary-foreground hover:bg-primary-secondary\"\n                    onClick={toggleChat}\n                    aria-label=\"Minimize chat\"\n                >\n                    <X className=\"w-4 h-4\" />\n                </Button>\n            </div>\n            <div className=\"flex flex-1 h-full\">\n                {selectedConversation ? (\n                    <div className=\"flex flex-1 duration-300 animate-in fade-in slide-in-from-right-5\">\n                        <Conversation conversationId={selectedConversation} />\n                    </div>\n                ) : showInbox ? (\n                    <div className=\"flex flex-1 duration-300 animate-in fade-in\">\n                        <Inbox onSelectConversation={setSelectedConversation} />\n                    </div>\n                ) : (\n                    <div className=\"flex flex-1 duration-300 animate-in fade-in\">\n                        <WelcomeScreen onStartConversation={handleStartConversation} />\n                    </div>\n                )}\n            </div>\n        </div>\n    )\n}"],"names":[],"mappings":";;;;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;AAMO,MAAM,aAAa,CAAC,EAAE,UAAU,EAAa;;IAChD,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,sBAAsB,wBAAwB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAEhF,MAAM,0BAA0B;QAC5B,aAAa;IACjB;IAEA,MAAM,kBAAkB;QACpB,IAAI,sBAAsB;YACtB,wBAAwB;QAC5B,OAAO;YACH,aAAa;QACjB;IACJ;IAEA,qBACI,6LAAC;QAAI,WAAU;;0BACX,6LAAC;gBAAI,WAAU;;oBACV,sCACG,6LAAC,8HAAA,CAAA,SAAM;wBACH,SAAQ;wBACR,MAAK;wBACL,WAAU;wBACV,SAAS;wBACT,cAAW;kCAEX,cAAA,6LAAC,mNAAA,CAAA,YAAS;4BAAC,WAAU;;;;;;;;;;;kCAG7B,6LAAC;wBAAG,WAAU;kCACT,uBAAuB,iBAAiB;;;;;;kCAE7C,6LAAC,8HAAA,CAAA,SAAM;wBACH,SAAQ;wBACR,MAAK;wBACL,WAAU;wBACV,SAAS;wBACT,cAAW;kCAEX,cAAA,6LAAC,+LAAA,CAAA,IAAC;4BAAC,WAAU;;;;;;;;;;;;;;;;;0BAGrB,6LAAC;gBAAI,WAAU;0BACV,qCACG,6LAAC;oBAAI,WAAU;8BACX,cAAA,6LAAC,sIAAA,CAAA,eAAY;wBAAC,gBAAgB;;;;;;;;;;2BAElC,0BACA,6LAAC;oBAAI,WAAU;8BACX,cAAA,6LAAC,+HAAA,CAAA,UAAK;wBAAC,sBAAsB;;;;;;;;;;yCAGjC,6LAAC;oBAAI,WAAU;8BACX,cAAA,6LAAC,uIAAA,CAAA,gBAAa;wBAAC,qBAAqB;;;;;;;;;;;;;;;;;;;;;;AAM5D;GA5Da;KAAA","debugId":null}},
    {"offset": {"line": 1417, "column": 0}, "map": {"version":3,"sources":["file:///Users/dylan/dev/customer-assist-poc/components/chat/FAB.tsx"],"sourcesContent":["\"use client\"\n\nimport { Button } from \"@/components/ui/button\"\nimport { MessageCircle } from \"lucide-react\"\n\nexport function ChatFab({ onClick }: { onClick: () => void }) {\n\n  return (\n    <Button\n      size=\"icon\"\n      className=\"duration-300 rounded-full shadow-lg cursor-pointer h-14 w-14 animate-in fade-in\"\n      aria-label=\"Chat with us\"\n      onClick={onClick}\n    >\n      <MessageCircle className=\"w-6 h-6\" />\n    </Button>\n  )\n}\n\n\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAKO,SAAS,QAAQ,EAAE,OAAO,EAA2B;IAE1D,qBACE,6LAAC,8HAAA,CAAA,SAAM;QACL,MAAK;QACL,WAAU;QACV,cAAW;QACX,SAAS;kBAET,cAAA,6LAAC,2NAAA,CAAA,gBAAa;YAAC,WAAU;;;;;;;;;;;AAG/B;KAZgB","debugId":null}},
    {"offset": {"line": 1458, "column": 0}, "map": {"version":3,"sources":["file:///Users/dylan/dev/customer-assist-poc/components/chat/Chat.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState } from \"react\"\nimport { ChatWindow } from \"./ChatWindow\"\nimport { ChatFab } from \"./FAB\"\n\nexport function Chat() {\n  const [isOpen, setIsOpen] = useState(false)\n\n  const toggleChat = () => {\n    setIsOpen(!isOpen)\n  }\n\n  return (\n    <div className=\"fixed z-50 bottom-4 right-4\">\n      {isOpen ? (\n        <ChatWindow toggleChat={toggleChat} />\n      ) : (\n        <ChatFab onClick={toggleChat} />\n      )}\n    </div>\n  )\n}\n\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;;;AAJA;;;;AAMO,SAAS;;IACd,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAErC,MAAM,aAAa;QACjB,UAAU,CAAC;IACb;IAEA,qBACE,6LAAC;QAAI,WAAU;kBACZ,uBACC,6LAAC,oIAAA,CAAA,aAAU;YAAC,YAAY;;;;;iCAExB,6LAAC,6HAAA,CAAA,UAAO;YAAC,SAAS;;;;;;;;;;;AAI1B;GAhBgB;KAAA","debugId":null}}]
}